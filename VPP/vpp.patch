diff --git a/src/vnet/ip/ip4_forward.c b/src/vnet/ip/ip4_forward.c
index 7352c2e..a0b8f2f 100644
--- a/src/vnet/ip/ip4_forward.c
+++ b/src/vnet/ip/ip4_forward.c
@@ -1688,17 +1688,17 @@ ip4_local_inline (vlib_main_t * vm,
 	  error0 = ((error0 == IP4_ERROR_UNKNOWN_PROTOCOL &&
 		     dpo0->dpoi_type == DPO_RECEIVE) ?
 		    IP4_ERROR_SPOOFED_LOCAL_PACKETS : error0);
-	  error0 = ((error0 == IP4_ERROR_UNKNOWN_PROTOCOL &&
-		     !fib_urpf_check_size (lb0->lb_urpf) &&
-		     ip0->dst_address.as_u32 != 0xFFFFFFFF)
-		    ? IP4_ERROR_SRC_LOOKUP_MISS : error0);
+//	  error0 = ((error0 == IP4_ERROR_UNKNOWN_PROTOCOL &&
+//		     !fib_urpf_check_size (lb0->lb_urpf) &&
+//		     ip0->dst_address.as_u32 != 0xFFFFFFFF)
+//		    ? IP4_ERROR_SRC_LOOKUP_MISS : error0);
 	  error1 = ((error1 == IP4_ERROR_UNKNOWN_PROTOCOL &&
 		     dpo1->dpoi_type == DPO_RECEIVE) ?
 		    IP4_ERROR_SPOOFED_LOCAL_PACKETS : error1);
-	  error1 = ((error1 == IP4_ERROR_UNKNOWN_PROTOCOL &&
-		     !fib_urpf_check_size (lb1->lb_urpf) &&
-		     ip1->dst_address.as_u32 != 0xFFFFFFFF)
-		    ? IP4_ERROR_SRC_LOOKUP_MISS : error1);
+//	  error1 = ((error1 == IP4_ERROR_UNKNOWN_PROTOCOL &&
+//		     !fib_urpf_check_size (lb1->lb_urpf) &&
+//		     ip1->dst_address.as_u32 != 0xFFFFFFFF)
+//		    ? IP4_ERROR_SRC_LOOKUP_MISS : error1);
 
 	skip_checks:
 
@@ -1846,10 +1846,10 @@ ip4_local_inline (vlib_main_t * vm,
 	  error0 = ((error0 == IP4_ERROR_UNKNOWN_PROTOCOL &&
 		     dpo0->dpoi_type == DPO_RECEIVE) ?
 		    IP4_ERROR_SPOOFED_LOCAL_PACKETS : error0);
-	  error0 = ((error0 == IP4_ERROR_UNKNOWN_PROTOCOL &&
-		     !fib_urpf_check_size (lb0->lb_urpf) &&
-		     ip0->dst_address.as_u32 != 0xFFFFFFFF)
-		    ? IP4_ERROR_SRC_LOOKUP_MISS : error0);
+//	  error0 = ((error0 == IP4_ERROR_UNKNOWN_PROTOCOL &&
+//		     !fib_urpf_check_size (lb0->lb_urpf) &&
+//		     ip0->dst_address.as_u32 != 0xFFFFFFFF)
+//		    ? IP4_ERROR_SRC_LOOKUP_MISS : error0);
 
 	skip_check:
 
@@ -2461,7 +2461,6 @@ ip4_rewrite_inline (vlib_main_t * vm,
 		}
 
 	      /* Verify checksum. */
-	      ASSERT (ip0->checksum == ip4_header_checksum (ip0));
 	      ASSERT (ip1->checksum == ip4_header_checksum (ip1));
 	    }
 	  else
diff --git a/src/vnet/ip/ip6_forward.c b/src/vnet/ip/ip6_forward.c
index 15970da..0bcb23a 100644
--- a/src/vnet/ip/ip6_forward.c
+++ b/src/vnet/ip/ip6_forward.c
@@ -1389,20 +1389,20 @@ ip6_local (vlib_main_t * vm, vlib_node_runtime_t * node, vlib_frame_t * frame)
 
 	  /* Drop packets from unroutable hosts. */
 	  /* If this is a neighbor solicitation (ICMP), skip source RPF check */
-	  if (error0 == IP6_ERROR_UNKNOWN_PROTOCOL &&
-	      type0 != IP_BUILTIN_PROTOCOL_ICMP &&
-	      !ip6_address_is_link_local_unicast (&ip0->src_address))
-	    {
-	      error0 = (!ip6_urpf_loose_check (im, p0, ip0)
-			? IP6_ERROR_SRC_LOOKUP_MISS : error0);
-	    }
-	  if (error1 == IP6_ERROR_UNKNOWN_PROTOCOL &&
-	      type1 != IP_BUILTIN_PROTOCOL_ICMP &&
-	      !ip6_address_is_link_local_unicast (&ip1->src_address))
-	    {
-	      error1 = (!ip6_urpf_loose_check (im, p1, ip1)
-			? IP6_ERROR_SRC_LOOKUP_MISS : error1);
-	    }
+//	  if (error0 == IP6_ERROR_UNKNOWN_PROTOCOL &&
+//	      type0 != IP_BUILTIN_PROTOCOL_ICMP &&
+//	      !ip6_address_is_link_local_unicast (&ip0->src_address))
+//	    {
+//	      error0 = (!ip6_urpf_loose_check (im, p0, ip0)
+//			? IP6_ERROR_SRC_LOOKUP_MISS : error0);
+//	    }
+//	  if (error1 == IP6_ERROR_UNKNOWN_PROTOCOL &&
+//	      type1 != IP_BUILTIN_PROTOCOL_ICMP &&
+//	      !ip6_address_is_link_local_unicast (&ip1->src_address))
+//	    {
+//	      error1 = (!ip6_urpf_loose_check (im, p1, ip1)
+//			? IP6_ERROR_SRC_LOOKUP_MISS : error1);
+//	    }
 
 	  next0 =
 	    error0 != IP6_ERROR_UNKNOWN_PROTOCOL ? IP_LOCAL_NEXT_DROP : next0;
@@ -1485,13 +1485,13 @@ ip6_local (vlib_main_t * vm, vlib_node_runtime_t * node, vlib_frame_t * frame)
 	    (!good_l4_checksum0 ? IP6_ERROR_UDP_CHECKSUM + type0 : error0);
 
 	  /* If this is a neighbor solicitation (ICMP), skip source RPF check */
-	  if (error0 == IP6_ERROR_UNKNOWN_PROTOCOL &&
-	      type0 != IP_BUILTIN_PROTOCOL_ICMP &&
-	      !ip6_address_is_link_local_unicast (&ip0->src_address))
-	    {
-	      error0 = (!ip6_urpf_loose_check (im, p0, ip0)
-			? IP6_ERROR_SRC_LOOKUP_MISS : error0);
-	    }
+//	  if (error0 == IP6_ERROR_UNKNOWN_PROTOCOL &&
+//	      type0 != IP_BUILTIN_PROTOCOL_ICMP &&
+//	      !ip6_address_is_link_local_unicast (&ip0->src_address))
+//	    {
+//	      error0 = (!ip6_urpf_loose_check (im, p0, ip0)
+//			? IP6_ERROR_SRC_LOOKUP_MISS : error0);
+//	    }
 
 	  next0 =
 	    error0 != IP6_ERROR_UNKNOWN_PROTOCOL ? IP_LOCAL_NEXT_DROP : next0;
diff --git a/src/vnet/lisp-cp/control.c b/src/vnet/lisp-cp/control.c
index ebbd1be..a9f7ee3 100644
--- a/src/vnet/lisp-cp/control.c
+++ b/src/vnet/lisp-cp/control.c
@@ -3601,9 +3601,9 @@ lisp_cp_init (vlib_main_t * vm)
   hash_set (lcm->table_id_by_vni, 0, 0);
   hash_set (lcm->vni_by_table_id, 0, 0);
 
-  udp_register_dst_port (vm, UDP_DST_PORT_lisp_cp,
+  udp_register_dst_port (vm, 4343,
 			 lisp_cp_input_node.index, 1 /* is_ip4 */ );
-  udp_register_dst_port (vm, UDP_DST_PORT_lisp_cp6,
+  udp_register_dst_port (vm, 4343,
 			 lisp_cp_input_node.index, 0 /* is_ip4 */ );
 
   u64 now = clib_cpu_time_now ();
diff --git a/src/vnet/lisp-cp/lisp_cp_dpo.c b/src/vnet/lisp-cp/lisp_cp_dpo.c
index 848f621..615d3ff 100644
--- a/src/vnet/lisp-cp/lisp_cp_dpo.c
+++ b/src/vnet/lisp-cp/lisp_cp_dpo.c
@@ -65,12 +65,12 @@ const static dpo_vft_t lisp_cp_vft = {
  * parent object in the DPO-graph.
  */
 const static char *const lisp_cp_ip4_nodes[] = {
-  "lisp-cp-lookup-ip4",
+  "oor_pkt_miss",
   NULL,
 };
 
 const static char *const lisp_cp_ip6_nodes[] = {
-  "lisp-cp-lookup-ip6",
+  "oor_pkt_miss",
   NULL,
 };
 
